{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/card\";\nimport * as i7 from \"primeng/inputtext\";\nimport * as i8 from \"primeng/button\";\nfunction LoginComponent_small_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email should be valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtemplate(1, LoginComponent_small_6_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, LoginComponent_small_6_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_small_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtemplate(1, LoginComponent_small_11_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"required\"]);\n  }\n}\nconst _c0 = function () {\n  return {\n    width: \"360px\"\n  };\n};\nexport class LoginComponent {\n  constructor(fb, authService, router, msgService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.msgService = msgService;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  get email() {\n    return this.loginForm.controls['email'];\n  }\n  get password() {\n    return this.loginForm.controls['password'];\n  }\n  loginUser() {\n    const {\n      email,\n      password\n    } = this.loginForm.value;\n    this.authService.getUserByEmail(email).subscribe(response => {\n      console.log(response, password);\n      if (response && response.password === password) {\n        sessionStorage.setItem('email', email);\n        this.router.navigate(['/home']);\n      } else {\n        this.msgService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'email or password is wrong'\n        });\n      }\n    }, error => {\n      this.msgService.add({\n        severity: 'error',\n        summary: 'Error',\n        detail: 'Something went wrong'\n      });\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 17,\n  vars: 7,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"header\", \"Login\"], [1, \"field\"], [\"for\", \"email\"], [\"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"email\", \"name\", \"email\", \"placeholder\", \"Type your email\", 1, \"w-full\"], [\"class\", \"block p-error\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"pInputText\", \"\", \"formControlName\", \"password\", \"name\", \"password\", \"placeholder\", \"Type your password\", 1, \"w-full\"], [\"label\", \"SIGN IN\", \"styleClass\", \"w-full\", \"type\", \"submit\", 3, \"disabled\"], [1, \"mt-2\"], [\"routerLink\", \"/register\"], [1, \"block\", \"p-error\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.loginUser();\n      });\n      i0.ɵɵelementStart(1, \"p-card\", 1)(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4);\n      i0.ɵɵtemplate(6, LoginComponent_small_6_Template, 3, 2, \"small\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 7);\n      i0.ɵɵtemplate(11, LoginComponent_small_11_Template, 2, 1, \"small\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"p-button\", 8);\n      i0.ɵɵelementStart(13, \"div\", 9);\n      i0.ɵɵtext(14, \"Not a member? \");\n      i0.ɵɵelementStart(15, \"a\", 10);\n      i0.ɵɵtext(16, \"Register\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && (ctx.email.dirty || ctx.email.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i3.RouterLink, i6.Card, i7.InputText, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.Button],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_small_6_div_1_Template","LoginComponent_small_6_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","email","errors","LoginComponent_small_11_div_1_Template","ctx_r1","password","LoginComponent","constructor","fb","authService","router","msgService","loginForm","group","required","controls","loginUser","value","getUserByEmail","subscribe","response","console","log","sessionStorage","setItem","navigate","add","severity","summary","detail","error","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","MessageService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵelement","LoginComponent_small_6_Template","LoginComponent_small_11_Template","ɵɵstyleMap","ɵɵpureFunction0","_c0","invalid","dirty","touched"],"sources":["/Users/rajesh07/Desktop/buyogo/client/src/app/components/login/login.component.ts","/Users/rajesh07/Desktop/buyogo/client/src/app/components/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required]\n  })\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private msgService: MessageService\n  ) { }\n\n  get email() {\n    return this.loginForm.controls['email'];\n  }\n  get password() { return this.loginForm.controls['password']; }\n\n  loginUser() {\n    const { email, password } = this.loginForm.value;\n    this.authService.getUserByEmail(email as string).subscribe(\n      response => {\n        console.log(response,password);\n        if (response && response.password === password) {\n          sessionStorage.setItem('email', email as string);\n          this.router.navigate(['/home']);\n        } else {\n          this.msgService.add({ severity: 'error', summary: 'Error', detail: 'email or password is wrong' });\n        }\n      },\n      error => {\n        this.msgService.add({ severity: 'error', summary: 'Error', detail: 'Something went wrong' });\n      }\n\n    )\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\">\n  <p-card header=\"Login\" [style]=\"{ width: '360px' }\">\n    <div class=\"field\">\n      <label for=\"email\">Email</label>\n      <input\n        type=\"text\"\n        pInputText\n        formControlName=\"email\"\n        class=\"w-full\"\n        name=\"email\"\n        placeholder=\"Type your email\"\n      />\n      <small\n        *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n        class=\"block p-error\"\n      >\n        <div *ngIf=\"email.errors?.['required']\">Email is required.</div>\n        <div *ngIf=\"email.errors?.['email']\">Email should be valid</div>\n      </small>\n    </div>\n    <div class=\"field\">\n      <label for=\"password\">Password</label>\n      <input\n        type=\"password\"\n        pInputText\n        formControlName=\"password\"\n        class=\"w-full\"\n        name=\"password\"\n        placeholder=\"Type your password\"\n      />\n      <small\n        *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n        class=\"block p-error\"\n      >\n        <div *ngIf=\"password.errors?.['required']\">Password is required.</div>\n      </small>\n    </div>\n    <p-button\n      label=\"SIGN IN\"\n      styleClass=\"w-full\"\n      [disabled]=\"loginForm.invalid\"\n      type=\"submit\"\n    ></p-button>\n    <div class=\"mt-2\">Not a member? <a routerLink=\"/register\">Register</a></div>\n  </p-card>\n</form>\n"],"mappings":";AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;ICehDC,EAAA,CAAAC,cAAA,UAAwC;IAAAD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAChEH,EAAA,CAAAC,cAAA,UAAqC;IAAAD,EAAA,CAAAE,MAAA,4BAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IALlEH,EAAA,CAAAC,cAAA,gBAGC;IACCD,EAAA,CAAAI,UAAA,IAAAC,qCAAA,kBAAgE;IAChEL,EAAA,CAAAI,UAAA,IAAAE,qCAAA,kBAAgE;IAClEN,EAAA,CAAAG,YAAA,EAAQ;;;;IAFAH,EAAA,CAAAO,SAAA,GAAgC;IAAhCP,EAAA,CAAAQ,UAAA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,MAAA,kBAAAF,MAAA,CAAAC,KAAA,CAAAC,MAAA,aAAgC;IAChCX,EAAA,CAAAO,SAAA,GAA6B;IAA7BP,EAAA,CAAAQ,UAAA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,MAAA,kBAAAF,MAAA,CAAAC,KAAA,CAAAC,MAAA,UAA6B;;;;;IAiBnCX,EAAA,CAAAC,cAAA,UAA2C;IAAAD,EAAA,CAAAE,MAAA,4BAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAJxEH,EAAA,CAAAC,cAAA,gBAGC;IACCD,EAAA,CAAAI,UAAA,IAAAQ,sCAAA,kBAAsE;IACxEZ,EAAA,CAAAG,YAAA,EAAQ;;;;IADAH,EAAA,CAAAO,SAAA,GAAmC;IAAnCP,EAAA,CAAAQ,UAAA,SAAAK,MAAA,CAAAC,QAAA,CAAAH,MAAA,kBAAAE,MAAA,CAAAC,QAAA,CAAAH,MAAA,aAAmC;;;;;;;;ADvBjD,OAAM,MAAOI,cAAc;EAMzBC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc,EACdC,UAA0B;IAH1B,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,UAAU,GAAVA,UAAU;IATpB,KAAAC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACxBZ,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACwB,QAAQ,EAAExB,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDI,QAAQ,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACwB,QAAQ;KACnC,CAAC;EAOE;EAEJ,IAAIb,KAAKA,CAAA;IACP,OAAO,IAAI,CAACW,SAAS,CAACG,QAAQ,CAAC,OAAO,CAAC;EACzC;EACA,IAAIV,QAAQA,CAAA;IAAK,OAAO,IAAI,CAACO,SAAS,CAACG,QAAQ,CAAC,UAAU,CAAC;EAAE;EAE7DC,SAASA,CAAA;IACP,MAAM;MAAEf,KAAK;MAAEI;IAAQ,CAAE,GAAG,IAAI,CAACO,SAAS,CAACK,KAAK;IAChD,IAAI,CAACR,WAAW,CAACS,cAAc,CAACjB,KAAe,CAAC,CAACkB,SAAS,CACxDC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,EAACf,QAAQ,CAAC;MAC9B,IAAIe,QAAQ,IAAIA,QAAQ,CAACf,QAAQ,KAAKA,QAAQ,EAAE;QAC9CkB,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEvB,KAAe,CAAC;QAChD,IAAI,CAACS,MAAM,CAACe,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAChC,MAAM;QACL,IAAI,CAACd,UAAU,CAACe,GAAG,CAAC;UAAEC,QAAQ,EAAE,OAAO;UAAEC,OAAO,EAAE,OAAO;UAAEC,MAAM,EAAE;QAA4B,CAAE,CAAC;;IAEtG,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACnB,UAAU,CAACe,GAAG,CAAC;QAAEC,QAAQ,EAAE,OAAO;QAAEC,OAAO,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAsB,CAAE,CAAC;IAC9F,CAAC,CAEF;EACH;;SAnCWvB,cAAc;;mBAAdA,MAAc,EAAAf,EAAA,CAAAwC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA1C,EAAA,CAAAwC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA5C,EAAA,CAAAwC,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAA9C,EAAA,CAAAwC,iBAAA,CAAAO,EAAA,CAAAC,cAAA;AAAA;;QAAdjC,MAAc;EAAAkC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX3BvD,EAAA,CAAAC,cAAA,cAAuD;MAAzBD,EAAA,CAAAyD,UAAA,sBAAAC,iDAAA;QAAA,OAAYF,GAAA,CAAA/B,SAAA,EAAW;MAAA,EAAC;MACpDzB,EAAA,CAAAC,cAAA,gBAAoD;MAE7BD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MAChCH,EAAA,CAAA2D,SAAA,eAOE;MACF3D,EAAA,CAAAI,UAAA,IAAAwD,+BAAA,mBAMQ;MACV5D,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAAC,cAAA,aAAmB;MACKD,EAAA,CAAAE,MAAA,eAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACtCH,EAAA,CAAA2D,SAAA,gBAOE;MACF3D,EAAA,CAAAI,UAAA,KAAAyD,gCAAA,mBAKQ;MACV7D,EAAA,CAAAG,YAAA,EAAM;MACNH,EAAA,CAAA2D,SAAA,mBAKY;MACZ3D,EAAA,CAAAC,cAAA,cAAkB;MAAAD,EAAA,CAAAE,MAAA,sBAAc;MAAAF,EAAA,CAAAC,cAAA,aAA0B;MAAAD,EAAA,CAAAE,MAAA,gBAAQ;MAAAF,EAAA,CAAAG,YAAA,EAAI;;;MA3CpEH,EAAA,CAAAQ,UAAA,cAAAgD,GAAA,CAAAnC,SAAA,CAAuB;MACJrB,EAAA,CAAAO,SAAA,GAA4B;MAA5BP,EAAA,CAAA8D,UAAA,CAAA9D,EAAA,CAAA+D,eAAA,IAAAC,GAAA,EAA4B;MAY5ChE,EAAA,CAAAO,SAAA,GAAqD;MAArDP,EAAA,CAAAQ,UAAA,SAAAgD,GAAA,CAAA9C,KAAA,CAAAuD,OAAA,KAAAT,GAAA,CAAA9C,KAAA,CAAAwD,KAAA,IAAAV,GAAA,CAAA9C,KAAA,CAAAyD,OAAA,EAAqD;MAkBrDnE,EAAA,CAAAO,SAAA,GAA8D;MAA9DP,EAAA,CAAAQ,UAAA,SAAAgD,GAAA,CAAA1C,QAAA,CAAAmD,OAAA,KAAAT,GAAA,CAAA1C,QAAA,CAAAoD,KAAA,IAAAV,GAAA,CAAA1C,QAAA,CAAAqD,OAAA,EAA8D;MASjEnE,EAAA,CAAAO,SAAA,GAA8B;MAA9BP,EAAA,CAAAQ,UAAA,aAAAgD,GAAA,CAAAnC,SAAA,CAAA4C,OAAA,CAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}